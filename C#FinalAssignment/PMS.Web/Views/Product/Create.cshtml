@model PMS.Web.Models.ProductVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

<div class="row">
    <div class="portlet box green">
        <div class="portlet-title">
            <div class="tools_icon" onClick="window.location.href = '/Product/Index'">
                <i class="fa fa-arrow-circle-left bold"></i>
            </div>
            <div class="caption">
                @ViewBag.Title
            </div>
        </div>
        <div class="portlet-body form">
            @using (Html.BeginForm("CreateOrEdit", "Product", FormMethod.Post, new { id = "form", enctype = "multipart/form-data", @class = "form-horizontal p20" }))
            {
                @Html.AntiForgeryToken()
                <div class="col-md-12">
                    <div class="errorHandler alert alert-danger display-hide">
                        @*<label id="errormsg">You have some errors. Please check below.</label>*@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ProductID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Product Name
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @*<textarea id="Task_name" name="Task_name" class="form-control" style="width:300px;height:100px"></textarea>*@
                            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Category
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Category, new[]{
                            new SelectListItem(){ Text = "Home Appliances", Value = "Home Appliances"},
                            new SelectListItem(){ Text = "Electronics", Value = "Electronics"},
                            new SelectListItem(){ Text = "Mobile,Computers", Value = "Mobile,Computers"},
                            new SelectListItem(){ Text = "Beauty", Value = "Beauty"},
                            new SelectListItem(){ Text = "Health", Value = "Health"},
                            new SelectListItem(){ Text = "Fashion", Value = "Fashion"},
                            new SelectListItem(){ Text = "Books", Value = "Books"}
                            }, "-- Select Category --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Price
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Quantity
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Quantity, new[]{
                            new SelectListItem(){ Text = "10", Value = "10"},
                            new SelectListItem(){ Text = "20", Value = "20"},
                            new SelectListItem(){ Text = "50", Value = "50"},
                            new SelectListItem(){ Text = "100", Value = "100"},
                            new SelectListItem(){ Text = "500", Value = "500"},
                            new SelectListItem(){ Text = "1000", Value = "1000"}
                            }, "-- Select Quantity --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Short Description
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Long Description
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.LongDescription, new { @class = "form-control", @style = "height:100px" })
                            @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Small Image
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SmallImage, new { @type = "file", @style = "padding: 6px 12px;" })
                            <span id="errSmallImage" class="no-error">File must be of image type</span>
                            @Html.ValidationMessageFor(model => model.SmallImage, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.smImgPath, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-line">
                        <label class="col-sm-2 control-label">
                            Large Image
                            <span class="symbol required"></span>
                        </label>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.LargeImage, new { @type = "file", @style = "padding:0px 12px;" })
                            <span id="errLargeImage" class="no-error">File must be of image type</span>
                            @Html.ValidationMessageFor(model => model.LargeImage, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.lgImgPath, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="btnSubmit" class="btn btn-success" value="Submit" style="width:100px" />
                        <input type="button" id="btnClear" class="btn btn-default" value="Cancel" style="width:100px" />
                    </div>
                </div>

            }
        </div>
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <style>
        .no-error {
            display: none;
        }

        .show-error {
            display: block;
            color: #ed6b75;
        }
    </style>

    <script>
        $(document).ready(function () {
            formValidator.init();
        });

        var formValidator = function () {

            function validatePhoto() {
                $("#SmallImage").on('change', function () {
                    var fileExtension = ['jpeg', 'jpg', 'png', 'gif'];
                    var pic = $("#SmallImage").val();
                    var ext = pic.substring(pic.lastIndexOf('.') + 1).toLowerCase();
                    if ($.inArray(ext, fileExtension) == -1) {
                        $("#errSmallImage").removeClass('no-error').addClass('show-error');
                        $("#SmallImage").val("");
                    }
                    else {
                        $("#errSmallImage").addClass('no-error').removeClass('show-error');
                    }
                });
                $("#LargeImage").on('change', function () {
                    var fileExtension = ['jpeg', 'jpg', 'png', 'gif'];
                    var pic = $("#LargeImage").val();
                    var ext = pic.substring(pic.lastIndexOf('.') + 1).toLowerCase();
                    if ($.inArray(ext, fileExtension) == -1) {
                        $("#errLargeImage").removeClass('no-error').addClass('show-error');
                        $("#LargeImage").val("");
                    }
                    else {
                        $("#errLargeImage").addClass('no-error').removeClass('show-error');
                    }
                });
            };

            function ClearButton() {
                $("#btnClear").click(function () {
                    $('#ProductName').val("");
                    $('#Category').val("");
                    $('#Price').val("");
                    $('#Quantity').val("");
                    $('#ShortDescription').val("");
                    $('#LongDescription').val("");
                    $('#SmallImage').val("");
                    $('#LargeImage').val("");
                    $("#errSmallImage").addClass('no-error').removeClass('show-error');
                    $("#errLargeImage").addClass('no-error').removeClass('show-error');
                    $(".errorHandler").hide();
                });
            };

            return {
                init: function () {
                    validatePhoto();
                    ClearButton();
                }
            }

        }();

    </script>
}

